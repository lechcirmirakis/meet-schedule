{"version":3,"sources":["hoc/container.js","components/navbar.js","components/listItem.js","components/list.js","components/delModal.js","components/addModal.js","components/filters.js","static/list.js","App.js","serviceWorker.js","index.js"],"names":["container","props","className","children","navbar","Navbar","bg","variant","fixed","Brand","href","alt","src","Button","onClick","addTrigger","listItem","console","log","Card","Body","showDescript","Title","title","Subtitle","date","starttime","endtime","Collapse","in","open","descript","deltrigger","memo","lengthState","meetList","length","icon","meetings","map","item","id","startTime","endTime","key","modalTrigger","addButotn","join","closeModal","delTrigger","Modal","size","aria-labelledby","centered","onHide","show","Header","closeButton","meetTitle","Footer","delHandler","validInfo","hourValid","Form","noValidate","validated","valid","onSubmit","event","handleSubmit","inputsArray","input","Group","Label","config","Control","value","type","as","rows","placeholder","required","onChange","updateInput","name","min","Feedback","validText","addHandler","filters","sortHandler","disabled","numberOfMeetings","sortAscent","App","state","list","delModalShow","addModalShow","formValid","todaDate","formInputs","start","end","meetToDel","getTodayDate","todayDate","Date","dd","getDate","mm","getMonth","getFullYear","sortMeetings","allMeetings","sortState","sort","a","b","localeCompare","setState","showItemDescript","meetIndex","findIndex","openState","modal","modalState","modalToTrigg","meetTodelState","formReset","delMeetingHandler","refreshArray","filter","updateInputsHandler","inputType","target","inputValue","resetForm","Object","assign","submitFormHandler","currentTarget","checkValidity","preventDefault","stopPropagation","parse","ids","element","meetToAdd","Math","max","push","this","staticlist","formInputsArray","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a11715a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst container = props => <div className=\"container\">{props.children}</div>\r\n\r\nexport default container;","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from '../hoc/container';\r\n\r\nconst navbar = props => {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\r\n      <Container>\r\n        <Navbar.Brand href=\"/\">\r\n          <img\r\n            alt=\"App Logo\"\r\n            src=\"images/icons/meet.png\"\r\n            className=\"App__Logo\"\r\n          />\r\n          {' Meet Schedule'}\r\n        </Navbar.Brand>\r\n        <Button variant=\"success\" onClick={props.addTrigger}>Add</Button>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default navbar;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\n\r\nconst listItem = props => {\r\n  console.log('list Item render');\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <div className=\"card-content\" onClick={props.showDescript}>\r\n          <Card.Title >{props.title}</Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">date: {props.date}</Card.Subtitle>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">hours: {props.starttime} - {props.endtime}</Card.Subtitle>\r\n          <Collapse in={props.open}>\r\n            <p>\r\n              {props.descript}\r\n            </p>\r\n          </Collapse>\r\n        </div>\r\n        <Button variant=\"warning\" onClick={props.deltrigger}>Delete</Button>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default listItem;","import React, { memo } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ListItem from './listItem';\r\n\r\nconst list = props => {\r\n  const showList = item => {\r\n    const { id, title, descript, date, startTime, endTime, open } = item;\r\n    return <ListItem\r\n      key={id}\r\n      title={title}\r\n      descript={descript}\r\n      date={date}\r\n      starttime={startTime}\r\n      endtime={endTime}\r\n      open={open}\r\n      showDescript={() => props.showDescript(id)}\r\n      deltrigger={() => props.modalTrigger(\"del\", id, title)} />\r\n  }\r\n\r\n  const lengthState = props.meetList.length > 0\r\n\r\n  const icon = !lengthState ? <img className=\"list_icon\" src=\"images/icons/stop.png\" alt=\"no meetings\" /> : null\r\n  const meetings = lengthState ? props.meetList.map(showList) : <h4 className=\"list_title\">You don't have any meetings scheduled</h4>\r\n  const addButotn = !lengthState ? <Button variant=\"success\" onClick={props.modalTrigger}>Add meeting </Button> : null;\r\n  \r\n  return (\r\n    <div className={['meet_list', !lengthState ? 'flex-center' : null].join(' ')}>\r\n      {icon}\r\n      {meetings}\r\n      {addButotn}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(list);","import React, { memo } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst delModal = props => {\r\n  console.log('DEL MODAL RENDER');\r\n\r\n  const closeModal = () => props.delTrigger('del');\r\n\r\n  return (\r\n    <Modal\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      onHide={closeModal}\r\n      show={props.show}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Delete \"{props.meetTitle}\" ?</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure you want to delete this meeting?!</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"outline-warning\" onClick={closeModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"danger\" onClick={props.delHandler}>\r\n          Delete\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default memo(delModal);","import React, { memo } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst AppModal = props => {\r\n  console.log('ADD MODAL RENDER');\r\n\r\n  const validInfo = !props.hourValid ? <p className=\"hour_valid\">Please enter valid hours</p> : null;\r\n\r\n  return (\r\n    <Modal\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      onHide={props.addTrigger}\r\n      show={props.show}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add new meeting</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={props.valid} onSubmit={(event) => props.handleSubmit(event)}>\r\n          {\r\n            props.inputsArray.map(input => {\r\n              return (\r\n                <Form.Group key={input.key}>\r\n                  <Form.Label>{input.config.title}</Form.Label>\r\n                  <Form.Control\r\n                    value={input.config.value}\r\n                    type={input.config.type}\r\n                    as={input.config.as}\r\n                    rows={input.config.rows}\r\n                    placeholder={input.config.placeholder}\r\n                    required={input.config.required}\r\n                    onChange={(event) => props.updateInput(event)}\r\n                    name={input.key}\r\n                    min={input.config.min}\r\n                  >\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">{input.config.validText}</Form.Control.Feedback>\r\n                </Form.Group>\r\n              )\r\n            })\r\n          }\r\n          <Form.Group className={['form_buttons', !props.hourValid ? 'form_buttons--invalid' : null].join(' ')}>\r\n            {validInfo}\r\n            <div>\r\n              <Button variant=\"outline-warning\" onClick={props.addTrigger}>\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\" variant=\"success\" onClick={props.addHandler}>\r\n                Add\r\n              </Button>\r\n            </div>\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default memo(AppModal);","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst filters = props => {\r\n  return (\r\n    <div className=\"filters\">\r\n      <Button\r\n        variant=\"outline-secondary\"\r\n        className=\"sort-btn\"\r\n        onClick={props.sortHandler}\r\n        disabled={props.numberOfMeetings <= 1}>\r\n        Sort\r\n        <img\r\n          className={[\"sort-arrow\", props.sortAscent ? 'up' : null].join(' ')}\r\n          src=\"images/icons/triangle.png\"\r\n          alt=\"triangle\" />\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default filters;","export default ([\r\n  {\r\n    id: 1, \r\n    title: 'Recruitment meeting 1',\r\n    descript: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\r\n    date: '2019-11-15',\r\n    startTime: '8:00',\r\n    endTime: '10:00',\r\n    open: false\r\n  },\r\n  {\r\n    id: 2, \r\n    title: 'Recruitment meeting 2',\r\n    descript: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\r\n    date: '2019-12-29',\r\n    startTime: '8:00',\r\n    endTime: '10:00',\r\n    open: false\r\n  },\r\n  {\r\n    id: 3, \r\n    title: 'Recruitment meeting 3',\r\n    descript: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\r\n    date: '2018-17-10',\r\n    startTime: '8:00',\r\n    endTime: '10:00',\r\n    open: false\r\n  },\r\n  {\r\n    id: 4, \r\n    title: 'Recruitment meeting 4',\r\n    descript: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\r\n    date: '2019-11-11',\r\n    startTime: '8:00',\r\n    endTime: '10:00',\r\n    open: false\r\n  },\r\n])","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from './hoc/container';\nimport Navbar from './components/navbar';\nimport List from './components/list';\nimport DelModal from './components/delModal';\nimport AddModal from './components/addModal';\nimport Filters from './components/filters';\nimport staticlist from './static/list';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    list: [],\n    delModalShow: false,\n    addModalShow: false,\n    formValid: false,\n    hourValid: true,\n    todaDate: false,\n    sortAscent: true,\n    formInputs: {\n      name: {\n        value: '',\n        title: 'Meeting title',\n        validText: 'Enter the meeting title!',\n        required: true,\n        type: 'text',\n        placeholder: 'Meeting title'\n      },\n      descript: {\n        value: '',\n        title: 'Meeting description',\n        validText: 'Enter the meeting descript!',\n        required: true,\n        as: 'textarea',\n        rows: '4',\n        placeholder: 'Meeting description'\n      },\n      date: {\n        value: '',\n        title: 'Meeting date',\n        validText: 'Enter the meeting date (min today date)!',\n        required: true,\n        type: 'date',\n        placeholder: null,\n        min: ''\n      },\n      start: {\n        value: '',\n        title: 'Start of meeting',\n        validText: 'Select the meeting start time!',\n        required: true,\n        type: 'time'\n      },\n      end: {\n        value: '',\n        title: 'End of meeting',\n        validText: 'Select the meeting end time!',\n        required: true,\n        type: 'time'\n      },\n    },\n    meetToDel: {\n      id: null,\n      title: ''\n    }\n  }\n\n  componentDidMount() {\n    if (!this.state.todaDate) {\n      const formInputs = { ...this.state.formInputs };\n      formInputs.date.min = this.getTodayDate();\n\n      // when main up component did mount, get static data and sort them\n      this.setState({\n        list: staticlist,\n        formInputs: formInputs,\n        todayDate: true\n      }, () => {\n        this.sortMeetings();\n      })\n    }\n  }\n\n\n  // get Today Date for date input in add meet form\n  getTodayDate = () => {\n    let todayDate = new Date();\n\n    let dd = todayDate.getDate();\n    let mm = todayDate.getMonth() + 1;\n    const yyyy = todayDate.getFullYear();\n\n    if (dd < 10) { dd = '0' + dd }\n    if (mm < 10) { mm = '0' + mm }\n\n    return todayDate = yyyy + '-' + mm + '-' + dd;\n  }\n\n  // sorting list of meetings\n  sortMeetings = () => {\n    const allMeetings = [...this.state.list];\n    const sortState = this.state.sortAscent;\n    const sortKey = 'date';\n\n    if (!sortState) {\n      allMeetings.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\n    }\n    else {\n      allMeetings.sort((a, b) => b[sortKey].localeCompare(a[sortKey]))\n    }\n\n    this.setState({ list: allMeetings, sortAscent: !sortState });\n  }\n\n  showItemDescript = id => {\n    const meetList = [...this.state.list];\n    const meetIndex = meetList.findIndex(item => item.id === id);\n    const openState = meetList[meetIndex].open;\n    meetList[meetIndex].open = !openState;\n\n    this.setState({ list: meetList });\n  }\n\n  modalTrigger = (modal, id, title) => {\n    const modalState = modal === 'del' ? this.state.delModalShow : this.state.addModalShow;\n    const modalToTrigg = modal === 'del' ? 'delModalShow' : 'addModalShow';\n\n    if (!modalState && modal === 'del') {\n      const meetTodelState = this.state.meetToDel;\n      meetTodelState.id = id;\n      meetTodelState.title = title;\n\n      this.setState({ delModalShow: !modalState, meetToDel: meetTodelState });\n      return\n    }\n\n    if (modal !== 'del') {\n      this.formReset();\n    }\n\n    this.setState({ [modalToTrigg]: !modalState, hourValid: true });\n  }\n\n  delMeetingHandler = () => {\n    const meetList = [...this.state.list];\n    let refreshArray = meetList.filter(item => item.id !== this.state.meetToDel.id);\n\n    this.setState({ list: refreshArray, delModalShow: false });\n  }\n\n  updateInputsHandler = (event, name) => {\n    const inputType = event.target.name;\n    const inputValue = event.target.value;\n\n    let formInputs = { ...this.state.formInputs }\n    formInputs[inputType].value = inputValue;\n\n    this.setState({ formInputs: formInputs })\n  }\n\n  formReset = () => {\n    // const resetForm = { ...this.state.formInputs };\n    const resetForm = Object.assign({}, this.state.formInputs);\n\n    // HOW IT WORKS????  ?????????????????????????????????????????????????\n    for (const key in resetForm) {\n      resetForm[key].value = ''\n    }\n\n    console.log(this.state.formInputs);\n  }\n\n  submitFormHandler = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.setState({ formValid: true });\n    }\n    else {\n      event.preventDefault();\n      event.stopPropagation();\n\n      let startTime = Date.parse('01/01/2011 ' + this.state.formInputs.start.value);\n      let endTime = Date.parse('01/01/2011 ' + this.state.formInputs.end.value);\n\n      if (!(endTime > startTime)) {\n        this.setState({ hourValid: false });\n        return\n      }\n\n      const meetList = [...this.state.list]\n\n      // get meeting ids for generate new meet id \n      const ids = meetList.map(element => element.id);\n\n      // add new meet to list\n      const meetToAdd = {\n        id: ids.length !== 0 ? Math.max(...ids) + 1 : 1,\n        title: this.state.formInputs.name.value,\n        descript: this.state.formInputs.descript.value,\n        date: this.state.formInputs.date.value,\n        startTime: this.state.formInputs.start.value,\n        endTime: this.state.formInputs.end.value,\n        open: false\n      }\n\n      this.formReset();\n      meetList.push(meetToAdd);\n\n      this.setState({\n        list: meetList,\n        formValid: false,\n        hourValid: true,\n        addModalShow: false\n      });\n    }\n  }\n\n  render() {\n    // console.log('APP RENDER');\n\n    // change form Inputs object to array\n    const formInputsArray = [];\n\n    for (const key in this.state.formInputs) {\n      formInputsArray.push({\n        key: key,\n        config: this.state.formInputs[key]\n      })\n    }\n\n    return (\n      <div className='App'>\n        <Navbar\n          addTrigger={this.modalTrigger}\n        />\n        <Container>\n          <Filters\n            sortAscent={this.state.sortAscent}\n            sortHandler={this.sortMeetings}\n            numberOfMeetings={this.state.list.length}\n          />\n          <List\n            meetList={this.state.list}\n            showDescript={this.showItemDescript}\n            modalTrigger={this.modalTrigger}\n          />\n          <DelModal\n            show={this.state.delModalShow}\n            delTrigger={this.modalTrigger}\n            delHandler={this.delMeetingHandler}\n            meetTitle={this.state.meetToDel.title}\n          />\n          <AddModal\n            show={this.state.addModalShow}\n            addTrigger={this.modalTrigger}\n            valid={this.state.formValid}\n            handleSubmit={this.submitFormHandler}\n            inputsArray={formInputsArray}\n            updateInput={this.updateInputsHandler}\n            hourValid={this.state.hourValid}\n          />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}