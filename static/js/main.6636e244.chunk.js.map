{"version":3,"sources":["hoc/container.js","components/Navbar/navbar.js","components/List/listItem.js","components/List/list.js","components/Modals/delModal.js","static/addFormObject.js","components/Modals/addModal.js","hoc/todayDate.js","components/Filters/filterBox.js","static/filtersInputsObject.js","components/Filters/sortBox.js","components/Filters/filters.js","static/list.js","App.js","serviceWorker.js","index.js"],"names":["container","props","className","children","navbar","Navbar","bg","variant","fixed","Brand","href","alt","src","Button","onClick","addTrigger","filtersState","filtersTrigger","listItem","Card","Body","showDescript","Title","title","Subtitle","date","starttime","endtime","Collapse","in","open","descript","deltrigger","list","lengthState","meetList","length","icon","meetings","map","item","id","startTime","endTime","key","modalTrigger","addButotn","addModalTrigger","join","delModal","React","memo","Modal","size","aria-labelledby","centered","onHide","delTrigger","show","Header","closeButton","meetTitle","Footer","delHandler","name","value","validText","required","type","placeholder","as","rows","min","start","end","WithTodayDate","WrappedComponent","getTodayDate","todayDate","Date","dd","getDate","mm","getMonth","getFullYear","useState","formInputs","formInputsState","setFormInputsState","formValidState","setFormValidState","hourValidState","setHourValidState","useEffect","inputsState","formInputsArray","push","config","validInfo","Form","noValidate","validated","onSubmit","event","preventDefault","stopPropagation","currentTarget","checkValidity","parse","newMeeting","Math","random","toString","onAddMeeting","prevState","resetForm","submitHandler","input","Group","Label","Control","onChange","updateValue","target","newState","Feedback","FilterBox","filtersInputsArray","filtersInputs","disabled","updateFiltersHandler","filterHandler","validInputs","onResetFilters","validDates","dateFrom","dateTo","sortBox","sortHandler","numberOfMeetings","sortAscent","Filters","console","log","filtersStatus","filterInputs","filterInputsState","setfilterInputsState","validInputsState","setValidInputsState","validDatesState","setValidDatesState","document","querySelector","style","display","dataRange","persist","resetHandler","App","meetListState","setMeetListState","listForReset","setListForReset","addModalState","setAddModalState","filtersShowState","setFiltersShowState","delModalState","setDelModalState","meetToDelState","setMeetToDelState","sortAscentState","setSortAscentState","sortList","staticlist","sort","a","b","localeCompare","allMeetings","sortState","listForFilter","filter","meet","meetIndex","findIndex","openState","refreshArray","newMeet","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6636e244.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst container = props => <div className=\"container\">{props.children}</div>\r\n\r\nexport default container;","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from '../../hoc/container';\r\n\r\nconst navbar = props => {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\r\n      <Container>\r\n        <Navbar.Brand href=\"/\">\r\n          <img\r\n            alt=\"App Logo\"\r\n            src=\"images/icons/meet.png\"\r\n            className=\"brand-logo\"\r\n          />\r\n          <span className='brand-name'>{' Meet Schedule'}</span>\r\n        </Navbar.Brand>\r\n        <div className=\"navbar-buttons\">\r\n          <Button variant=\"success\" onClick={props.addTrigger}>Add</Button>\r\n          <Button variant={!props.filtersState ? \"outline-primary\" : \"primary\"} onClick={props.filtersTrigger}>Filters</Button>\r\n        </div>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default navbar;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\n\r\nconst listItem = props => {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <div className=\"card-content\" onClick={props.showDescript}>\r\n          <Card.Title >{props.title}</Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">date: {props.date}</Card.Subtitle>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">hours: {props.starttime} - {props.endtime}</Card.Subtitle>\r\n          <Collapse in={props.open}>\r\n            <p>\r\n              {props.descript}\r\n            </p>\r\n          </Collapse>\r\n        </div>\r\n        <Button variant=\"warning\" onClick={props.deltrigger}>Delete</Button>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default listItem;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ListItem from './listItem';\r\n\r\nconst list = props => {\r\n\r\n  const showList = item => {\r\n    const { id, title, descript, date, startTime, endTime, open } = item;\r\n    return <ListItem\r\n      key={id}\r\n      title={title}\r\n      descript={descript}\r\n      date={date}\r\n      starttime={startTime}\r\n      endtime={endTime}\r\n      open={open}\r\n      showDescript={() => props.showDescript(id)}\r\n      deltrigger={() => props.modalTrigger(id, title)} />\r\n  }\r\n\r\n  const lengthState = props.meetList.length > 0;\r\n\r\n  const icon = !lengthState ? <img className=\"list_icon\" src=\"images/icons/stop.png\" alt=\"no meetings\" /> : null\r\n  const meetings = lengthState ? props.meetList.map(showList) : <h4 className=\"list_title\">You don't have any meetings scheduled</h4>\r\n  const addButotn = !lengthState ? <Button variant=\"success\" onClick={props.addModalTrigger}>Add meeting </Button> : null;\r\n  \r\n  return (\r\n    <div \r\n      className={[\r\n        'meet_list', !lengthState ? 'flex-center' : null, \r\n        !props.filtersState ? 'meet_list--nofilters' : null].join(' ')}>\r\n      {icon}\r\n      {meetings}\r\n      {addButotn}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default list;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst delModal = React.memo(props => {\r\n  return (\r\n    <Modal\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      onHide={props.delTrigger}\r\n      show={props.show}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Delete \"{props.meetTitle}\" ?</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure you want to delete this meeting?!</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"outline-warning\" onClick={props.delTrigger}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"danger\" onClick={props.delHandler}>\r\n          Delete\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n})\r\n\r\nexport default delModal;","export default {\r\n    name: {\r\n      value: '',\r\n      title: 'Meeting title',\r\n      validText: 'Enter the meeting title!',\r\n      required: true,\r\n      type: 'text',\r\n      placeholder: 'Meeting title'\r\n    },\r\n    descript: {\r\n      value: '',\r\n      title: 'Meeting description',\r\n      validText: 'Enter the meeting descript!',\r\n      required: true,\r\n      as: 'textarea',\r\n      rows: '4',\r\n      placeholder: 'Meeting description'\r\n    },\r\n    date: {\r\n      value: '',\r\n      title: 'Meeting date',\r\n      validText: 'Enter the meeting date (min today date)!',\r\n      required: true,\r\n      type: 'date',\r\n      placeholder: null,\r\n      min: ''\r\n    },\r\n    start: {\r\n      value: '',\r\n      title: 'Start of meeting',\r\n      validText: 'Select the meeting start time!',\r\n      required: true,\r\n      type: 'time'\r\n    },\r\n    end: {\r\n      value: '',\r\n      title: 'End of meeting',\r\n      validText: 'Select the meeting end time!',\r\n      required: true,\r\n      type: 'time'\r\n    },\r\n  }","import React, { useState, useEffect } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport formInputs from '../../static/addFormObject';\r\nimport WithTodayDate from '../../hoc/todayDate';\r\n\r\nconst AppModal = React.memo(props => {\r\n  const [formInputsState, setFormInputsState] = useState(formInputs);\r\n  const [formValidState, setFormValidState] = useState(false);\r\n  const [hourValidState, setHourValidState] = useState(true);\r\n\r\n  // add todayDate to date select\r\n  useEffect(() => {\r\n    const inputsState = formInputsState;\r\n    inputsState.date.min = props.todayDate;\r\n    setFormInputsState(inputsState)\r\n  }, [props.todayDate, formInputsState]);\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    const form = event.currentTarget;\r\n\r\n    if (form.checkValidity() === false) {\r\n      setFormValidState(true)\r\n    }\r\n    else {\r\n      let startTime = Date.parse('01/01/2011 ' + formInputsState.start.value);\r\n      let endTime = Date.parse('01/01/2011 ' + formInputsState.end.value);\r\n\r\n      if (!(endTime > startTime)) {\r\n        setHourValidState(false);\r\n        return\r\n      }\r\n\r\n      const newMeeting = {\r\n        id: Math.random().toString(),\r\n        title: formInputsState.name.value,\r\n        descript: formInputsState.descript.value,\r\n        date: formInputsState.date.value,\r\n        startTime: formInputsState.start.value,\r\n        endTime: formInputsState.end.value,\r\n        open: false\r\n      }\r\n\r\n      props.onAddMeeting(newMeeting);\r\n\r\n      setFormValidState(false);\r\n      setHourValidState(true);\r\n\r\n      setFormInputsState(prevState => {\r\n        const resetForm = prevState;\r\n        for (const key in resetForm) {\r\n          resetForm[key].value = ''\r\n        }\r\n        return resetForm\r\n      });\r\n    }\r\n  };\r\n\r\n  // make an array for form inputs\r\n  const formInputsArray = [];\r\n\r\n  for (const key in formInputsState) {\r\n    formInputsArray.push({\r\n      key: key,\r\n      config: formInputsState[key]\r\n    })\r\n  }\r\n\r\n  const validInfo = !hourValidState ? <p className=\"hour_valid\">Please enter valid hours</p> : null;\r\n\r\n  return (\r\n    <Modal\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      onHide={props.addTrigger}\r\n      show={props.show}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add new meeting</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={formValidState} onSubmit={event => submitHandler(event)}>\r\n          {\r\n            formInputsArray.map(input => {\r\n              return (\r\n                <Form.Group key={input.key}>\r\n                  <Form.Label>{input.config.title}</Form.Label>\r\n                  <Form.Control\r\n                    value={input.config.value}\r\n                    type={input.config.type}\r\n                    as={input.config.as}\r\n                    rows={input.config.rows}\r\n                    placeholder={input.config.placeholder}\r\n                    required={input.config.required}\r\n                    name={input.key}\r\n                    min={input.config.min}\r\n                    onChange={event => {\r\n                      const updateValue = event.target.value;\r\n                      setFormInputsState(prevState => {\r\n                        const newState = { ...prevState }\r\n                        newState[input.key].value = updateValue\r\n                        return newState\r\n                      })\r\n                    }}\r\n                  >\r\n                  </Form.Control>\r\n                  <Form.Control.Feedback type=\"invalid\">{input.config.validText}</Form.Control.Feedback>\r\n                </Form.Group>\r\n              )\r\n            })\r\n          }\r\n          <Form.Group className={['form_buttons', !hourValidState ? 'form_buttons--invalid' : null].join(' ')}>\r\n            {validInfo}\r\n            <div>\r\n              <Button variant=\"outline-warning\" onClick={props.addTrigger}>\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\" variant=\"success\">\r\n                Add\r\n              </Button>\r\n            </div>\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n});\r\n\r\nexport default WithTodayDate(AppModal);","import React from 'react';\r\n\r\nconst withTodayDate = (WrappedComponent) => {\r\n  const getTodayDate = () => {\r\n    let todayDate = new Date();\r\n\r\n    let dd = todayDate.getDate();\r\n    let mm = todayDate.getMonth() + 1;\r\n    const yyyy = todayDate.getFullYear();\r\n\r\n    if (dd < 10) { dd = '0' + dd }\r\n    if (mm < 10) { mm = '0' + mm }\r\n\r\n    return todayDate = yyyy + '-' + mm + '-' + dd;\r\n  }\r\n\r\n  return props => (\r\n    <WrappedComponent {...props} todayDate={getTodayDate()} />\r\n  )\r\n}\r\n\r\nexport default withTodayDate;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst FilterBox = props => {\r\n\r\n  const filtersInputsArray = [];\r\n\r\n  for (const key in props.filtersInputs) {\r\n    filtersInputsArray.push({\r\n      key: key,\r\n      config: props.filtersInputs[key]\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"filter-box\">\r\n      {\r\n        filtersInputsArray.map(input => {\r\n          return (\r\n            <Form.Control\r\n              key={input.key}\r\n              value={input.config.value}\r\n              type={input.config.type}\r\n              name={input.key}\r\n              min={input.config.min}\r\n              disabled={input.config.disabled}\r\n              onChange={event => props.updateFiltersHandler(event)}\r\n            />\r\n          )\r\n        })\r\n      }\r\n      <Button onClick={props.filterHandler} disabled={!props.validInputs}>Filter</Button>\r\n      <Button onClick={props.onResetFilters} disabled={!props.validDates} variant=\"outline-info\"> Reset </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterBox;","export default {\r\n  dateFrom: {\r\n    value: '',\r\n    type: 'date',\r\n    min: '2019-01-01'\r\n  },\r\n  dateTo: {\r\n    value: '',\r\n    type: 'date',\r\n    min: '',\r\n    disabled: true\r\n  }\r\n}","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst sortBox = props => {\r\n  return (\r\n    <div className=\"sorting-box\">\r\n      <Button\r\n        variant=\"outline-secondary\"\r\n        className=\"sort-btn\"\r\n        onClick={props.sortHandler}\r\n        disabled={props.numberOfMeetings <= 1}>\r\n        Sort\r\n          <img\r\n          className={[\"sort-arrow\", props.sortAscent ? 'up' : null].join(' ')}\r\n          src=\"images/icons/triangle.png\"\r\n          alt=\"triangle\" />\r\n      </Button>\r\n      <span>By Date</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default sortBox;","import React, { useState } from 'react';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport FilterBox from './filterBox';\r\nimport filterInputs from '../../static/filtersInputsObject';\r\nimport SortBox from './sortBox';\r\n\r\nconst Filters = props => {\r\n  console.log('FILTERS RENDER');\r\n  const [filterInputsState, setfilterInputsState] = useState(filterInputs);\r\n  const [validInputsState, setValidInputsState] = useState(false);\r\n  const [validDatesState, setValidDatesState] = useState(false);\r\n\r\n  const updateFiltersHandler = event => {\r\n    event.persist()\r\n    const updateValue = event.target.value;\r\n\r\n    setfilterInputsState(prevState => {\r\n      const newState = { ...prevState }\r\n\r\n      if (newState.dateFrom.value === '') {\r\n        newState.dateTo.disabled = false;\r\n      }\r\n\r\n      newState[event.target.name].value = updateValue;\r\n      newState.dateTo.min = updateValue;\r\n\r\n      if (newState.dateFrom.value !== '' && newState.dateTo.value !== '') {\r\n        setValidInputsState(true)\r\n      }\r\n\r\n      return newState\r\n    })\r\n  }\r\n\r\n  const filterMeetings = () => {\r\n    let dateFrom = Date.parse(filterInputsState.dateFrom.value);\r\n    let dateTo = Date.parse(filterInputsState.dateTo.value);\r\n\r\n    if (dateFrom < dateTo) {\r\n      setValidDatesState(true);\r\n\r\n      const dataRange = {\r\n        dateFrom: filterInputsState.dateFrom.value,\r\n        dateTo: filterInputsState.dateTo.value\r\n      }\r\n\r\n      props.filterHandler(dataRange);\r\n    }\r\n    else {\r\n      setValidDatesState('error');\r\n    }\r\n  }\r\n\r\n  const resetFilters = () => {\r\n    console.log('reset');\r\n\r\n    setValidInputsState(false);\r\n    setValidDatesState(false);\r\n    setfilterInputsState(filterInputs);\r\n    props.resetHandler();\r\n  }\r\n\r\n  let filtersStatus;\r\n\r\n  if (validDatesState === 'error') {  \r\n    filtersStatus = (\r\n      <p className=\"status-error\">Start date cannot be greater than end date </p>\r\n    )\r\n\r\n    document.querySelector('.filter-status').style.display = 'block';\r\n  }\r\n\r\n  return (\r\n    <Collapse in={props.filtersState}>\r\n      <div>\r\n        <div className=\"filters\">\r\n          <FilterBox\r\n            validInputs={validInputsState}\r\n            validDates={validDatesState}\r\n            filterHandler={filterMeetings}\r\n            filtersInputs={filterInputsState}\r\n            updateFiltersHandler={updateFiltersHandler}\r\n            onResetFilters={resetFilters}\r\n          />\r\n          <SortBox\r\n            sortAscent={props.sortAscent}\r\n            sortHandler={props.sortHandler}\r\n            numberOfMeetings={props.numberOfMeetings}\r\n          />\r\n        </div>\r\n        <div className={[\"filter-status\", validDatesState ? 'filter-status--show' : null].join(' ')}>\r\n          {filtersStatus}\r\n        </div>\r\n      </div>\r\n    </Collapse>\r\n  )\r\n}\r\n\r\nexport default Filters;","export default ([\r\n  {\r\n    id: 1, \r\n    title: 'Recruitment meeting 1',\r\n    descript: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\r\n    date: '2019-11-15',\r\n    startTime: '8:00',\r\n    endTime: '10:00',\r\n    open: false\r\n  },\r\n  {\r\n    id: 2, \r\n    title: 'Recruitment meeting 2',\r\n    descript: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\r\n    date: '2019-12-29',\r\n    startTime: '8:00',\r\n    endTime: '10:00',\r\n    open: false\r\n  },\r\n  {\r\n    id: 3, \r\n    title: 'Recruitment meeting 3',\r\n    descript: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\r\n    date: '2018-17-10',\r\n    startTime: '8:00',\r\n    endTime: '10:00',\r\n    open: false\r\n  },\r\n  {\r\n    id: 4, \r\n    title: 'Recruitment meeting 4',\r\n    descript: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\r\n    date: '2019-11-11',\r\n    startTime: '8:00',\r\n    endTime: '10:00',\r\n    open: false\r\n  },\r\n  {\r\n    id: 5, \r\n    title: 'Recruitment meeting 5',\r\n    descript: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\r\n    date: '2019-11-12',\r\n    startTime: '10:00',\r\n    endTime: '12:00',\r\n    open: false\r\n  },\r\n  {\r\n    id: 6, \r\n    title: 'Recruitment meeting 6',\r\n    descript: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\r\n    date: '2019-11-14',\r\n    startTime: '11:00',\r\n    endTime: '15:00',\r\n    open: false\r\n  },\r\n])","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from './hoc/container';\r\nimport Navbar from './components/Navbar/navbar';\r\nimport List from './components/List/list';\r\nimport DelModal from './components/Modals/delModal';\r\nimport AddModal from './components/Modals/addModal';\r\nimport Filters from './components/Filters/filters';\r\nimport staticlist from './static/list';\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n  console.log('App Render');\r\n\r\n  const [meetListState, setMeetListState] = useState([]);\r\n  const [listForReset, setListForReset] = useState([]);\r\n  const [addModalState, setAddModalState] = useState(false);\r\n  const [filtersShowState, setFiltersShowState] = useState(false);\r\n  const [delModalState, setDelModalState] = useState(false);\r\n  const [meetToDelState, setMeetToDelState] = useState({ id: null, title: '' });\r\n  const [sortAscentState, setSortAscentState] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const sortList = staticlist.sort((a, b) => b['date'].localeCompare(a['date']))\r\n    setMeetListState(sortList);\r\n    setListForReset(sortList);\r\n  }, []);\r\n\r\n  const addModalTrigger = () => setAddModalState(prevState => !prevState);\r\n  const filtersTrigger = () => setFiltersShowState(prevState => !prevState);\r\n\r\n  const showItemDescript = id => {\r\n    const meetList = [...meetListState];\r\n    const meetIndex = meetList.findIndex(item => item.id === id);\r\n    const openState = meetList[meetIndex].open;\r\n    meetList[meetIndex].open = !openState;\r\n\r\n    setMeetListState(meetList);\r\n  }\r\n\r\n  const modalTrigger = (id, title) => {\r\n    if (!delModalState) {\r\n      const meetToDel = { id: id, title: title }\r\n      setMeetToDelState(meetToDel);\r\n      setDelModalState(!delModalState);\r\n      return\r\n    }\r\n\r\n    setDelModalState(!delModalState);\r\n  }\r\n\r\n  const delMeetingHandler = () => {\r\n    let refreshArray = meetListState.filter(item => item.id !== meetToDelState.id);\r\n    setMeetListState(refreshArray);\r\n    setDelModalState(false);\r\n  }\r\n\r\n  const addMeetingHandler = newMeet => {\r\n    const meetList = [...listForReset];\r\n    meetList.push(newMeet);\r\n    setMeetListState(meetList);\r\n    setListForReset(meetList);\r\n    setAddModalState(false);\r\n  }\r\n\r\n  const sortMeetingsHandler = () => {\r\n    const allMeetings = meetListState;\r\n    const sortState = sortAscentState;\r\n\r\n    if (!sortState) {\r\n      allMeetings.sort((a, b) => a['date'].localeCompare(b['date']))\r\n    }\r\n    else {\r\n      allMeetings.sort((a, b) => b['date'].localeCompare(a['date']))\r\n    }\r\n\r\n    setMeetListState(allMeetings);\r\n    setSortAscentState(!sortState);\r\n  }\r\n\r\n  const filterMeetingsHandler = (dataRange) => {\r\n    const listForFilter = [...listForReset].filter(meet => meet.date >= dataRange.dateFrom && meet.date <= dataRange.dateTo);\r\n    setMeetListState(listForFilter);\r\n  }\r\n\r\n  const resetFiltersHandler = () => setMeetListState(listForReset);\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Navbar\r\n        addTrigger={addModalTrigger}\r\n        filtersState={filtersShowState}\r\n        filtersTrigger={filtersTrigger}\r\n      />\r\n      <Container>\r\n        <Filters\r\n          sortAscent={sortAscentState}\r\n          sortHandler={sortMeetingsHandler}\r\n          numberOfMeetings={meetListState.length}\r\n          filtersState={filtersShowState}\r\n          filterHandler={filterMeetingsHandler}\r\n          resetHandler={resetFiltersHandler}\r\n        />\r\n        <List\r\n          meetList={meetListState}\r\n          showDescript={showItemDescript}\r\n          modalTrigger={modalTrigger}\r\n          addModalTrigger={addModalTrigger}\r\n          filtersState={filtersShowState}\r\n        />\r\n        <DelModal\r\n          show={delModalState}\r\n          delTrigger={modalTrigger}\r\n          delHandler={delMeetingHandler}\r\n          meetTitle={meetToDelState.title}\r\n        />\r\n        <AddModal\r\n          show={addModalState}\r\n          addTrigger={addModalTrigger}\r\n          onAddMeeting={addMeetingHandler}\r\n        />\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}